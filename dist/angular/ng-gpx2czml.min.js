!function(e,t){"use strict";"function"==typeof define&&define.amd?define(["angular"],t):"object"==typeof exports?module.exports=t(require("angular")):t(e.angular)}(this,function(e){"use strict";return e.module("ngGpx2czml",[]).service("gpx2czml",["$q","$http",function(e,t){return{async:function(e,t){function n(){4===r.readyState&&(200===r.status?a.parseGpx(r.responseText,function(e,n){"function"==typeof t&&t(e,n)}):"function"==typeof t&&t(!0,"http request error"))}var r,a=this;window.XMLHttpRequest?r=new XMLHttpRequest:window.ActiveXObject&&(r=new ActiveXObject("Microsoft.XMLHTTP")),r.onreadystatechange=n,r.open("GET",e),r.send()},asyncFromFile:function(e,t){var n=this;this.processingFiles(e,function(e,r){e?"function"==typeof t&&t(e,r):n.parseGpx(r,function(e,n){"function"==typeof t&&t(e,n)})})},processingFiles:function(e,t){var n=new FileReader,r="chrome";try{var a=e.target.files;if(n.onload=function(e){var a;e?a=e.target.result:(a=n.content,r="ie"),"function"==typeof t&&t(!1,a)},!(a.length>0))throw"file is not defined";n.readAsText(a[0],"UTF-8")}catch(e){"function"==typeof t&&t(!0,e.toString())}},parseGpx:function(e,t){var n,r;try{window.DOMParser?(n=new DOMParser,r=n.parseFromString(e,"text/xml")):(r=new ActiveXObject("Microsoft.XMLDOM"),r.async="false",r.loadXML(e));var a=r.getElementsByTagName("gpx")[0];this.bindCzmlData(a,function(e,n){"function"==typeof t&&t(e,n)})}catch(e){"function"==typeof t&&t(!0,e.toString())}},getTextTag:function(e){var t=e.textContent;return t.replace(/(^\s*)|(\s*$)/gi,""),t},bindCzmlData:function(e,t){var n=this;try{for(var r=e.getElementsByTagName("metadata")[0],a=r.getElementsByTagName("time")[0],i=e.getElementsByTagName("trk")[0],o=i.getElementsByTagName("trkseg")[0],s=o.getElementsByTagName("trkpt"),c=this.getTextTag(a),g=new Date(c).getTime(),u=[{name:e.getAttribute("creator"),version:e.getAttribute("version"),clock:{interval:null,currentTime:c,multiplier:1,range:"CLAMPED"}},{position:{cartographicDegrees:[]}}],p=0;p<s.length;p++){var f=s[p],l=parseFloat(f.getAttribute("lat")),m=parseFloat(f.getAttribute("lon")),y=parseFloat(n.getTextTag(f.getElementsByTagName("ele")[0])),T=n.getTextTag(f.getElementsByTagName("time")[0]),h=(n.getTextTag(f.getElementsByTagName("extensions")[0]),new Date(T).getTime()),d=(h-g)/1e3;u[1].position.cartographicDegrees.push(d),u[1].position.cartographicDegrees.push(l),u[1].position.cartographicDegrees.push(m),u[1].position.cartographicDegrees.push(y),p==s.length-1&&(u[0].clock.interval=c+"/"+T)}"function"==typeof t&&t(!1,u)}catch(e){"function"==typeof t&&t(!0,e.toString())}}}}])});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
