"use strict";!function(){FileReader.prototype.readAsBinaryString||(FileReader.prototype.readAsBinaryString=function(e){var t="",n=this,r=new FileReader;r.onload=function(e){for(var a=new Uint8Array(r.result),o=a.byteLength,i=0;i<o;i++)t+=String.fromCharCode(a[i]);n.content=t,$(n).trigger("onload")},r.readAsArrayBuffer(e)});var e={async:function(e,t){function n(){4===r.readyState&&(200===r.status?a.parseGpx(r.responseText,function(e,n){"function"==typeof t&&t(e,n)}):"function"==typeof t&&t(!0,"http request error"))}var r,a=this;window.XMLHttpRequest?r=new XMLHttpRequest:window.ActiveXObject&&(r=new ActiveXObject("Microsoft.XMLHTTP")),r.onreadystatechange=n,r.open("GET",e),r.send()},asyncFromFile:function(e,t){var n=this;this.processingFiles(e,function(e,r){e?"function"==typeof t&&t(e,r):n.parseGpx(r,function(e,n){"function"==typeof t&&t(e,n)})})},processingFiles:function(e,t){var n=new FileReader,r="chrome";try{var a=e.target.files;if(n.onload=function(e){var a;e?a=e.target.result:(a=n.content,r="ie"),"function"==typeof t&&t(!1,a)},!(a.length>0))throw"file is not defined";n.readAsText(a[0],"UTF-8")}catch(e){"function"==typeof t&&t(!0,e.toString())}},parseGpx:function(e,t){var n,r;try{window.DOMParser?(n=new DOMParser,r=n.parseFromString(e,"text/xml")):(r=new ActiveXObject("Microsoft.XMLDOM"),r.async="false",r.loadXML(e));var a=r.getElementsByTagName("gpx")[0];this.bindCzmlData(a,function(e,n){"function"==typeof t&&t(e,n)})}catch(e){"function"==typeof t&&t(!0,e.toString())}},getTextTag:function(e){var t=e.textContent;return t.replace(/(^\s*)|(\s*$)/gi,""),t},bindCzmlData:function(e,t){var n=this;try{for(var r=e.getElementsByTagName("metadata")[0],a=r.getElementsByTagName("time")[0],o=e.getElementsByTagName("trk")[0],i=o.getElementsByTagName("trkseg")[0],s=i.getElementsByTagName("trkpt"),c=this.getTextTag(a),g=new Date(c).getTime(),p=[{name:e.getAttribute("creator"),version:e.getAttribute("version"),clock:{interval:null,currentTime:c,multiplier:1,range:"CLAMPED"}},{position:{cartographicDegrees:[]}}],f=0;f<s.length;f++){var l=s[f],u=parseFloat(l.getAttribute("lat")),m=parseFloat(l.getAttribute("lon")),y=parseFloat(n.getTextTag(l.getElementsByTagName("ele")[0])),d=n.getTextTag(l.getElementsByTagName("time")[0]),h=(n.getTextTag(l.getElementsByTagName("extensions")[0]),new Date(d).getTime()),T=(h-g)/1e3;p[1].position.cartographicDegrees.push(T),p[1].position.cartographicDegrees.push(u),p[1].position.cartographicDegrees.push(m),p[1].position.cartographicDegrees.push(y),f==s.length-1&&(p[0].clock.interval=c+"/"+d)}"function"==typeof t&&t(!1,p)}catch(e){"function"==typeof t&&t(!0,e.toString())}}};"undefined"!=typeof exports?module.exports=e:window.gpx2czml=e}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
